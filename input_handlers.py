import asyncio
from aiogram.types import Message
from aiogram_dialog.widgets.input import ManagedTextInput, MessageInput
from aiogram_dialog import DialogManager, ShowMode
from anketa_class import Anketa
from bot_instans  import dp, bot_storage_key

skills_dict = {
        '1':"Redis",
        '2':"PostgreSQL",
        '3':"aiogram-dialog",
        '4':"miniapp",
        '5':"–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å openAI",
        '6':"scheduler",
        '7':"BS4",
        '8':"pandas",
        '9':"Jenkins",
        '10':"react"}


# –•—ç–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
async def correct_name_handler(message: Message, widget: ManagedTextInput,
                               dialog_manager: DialogManager, name: str) -> None:
    state = dialog_manager.middleware_data["state"]
    us_dict = await state.get_data()
    us_dict['name'] = name
    await state.set_data(us_dict)
    await message.answer(text=f'–û—Ç–ª–∏—á–Ω–æ, <b>{name.capitalize()}</b>')
    await asyncio.sleep(1)
    dialog_manager.show_mode = ShowMode.SEND
    await message.delete()
    await dialog_manager.next()


# –•—ç–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤–≤–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
async def error_name_handler(message: Message,widget: ManagedTextInput,dialog_manager: DialogManager,error: ValueError):
    await message.answer(text='–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
    await asyncio.sleep(1)


async def correct_mail_handler(
        message: Message, widget: ManagedTextInput,
        dialog_manager: DialogManager, mail: str) -> None:
    state = dialog_manager.middleware_data["state"]
    us_dict = await state.get_data()
    us_dict['mail'] = mail
    await state.set_data(us_dict)
    await message.answer(text=f'–ê–¥—Ä–µ—Å, <b>{mail}</b> –∑–∞–ø–∏—Å–∞–Ω')
    await asyncio.sleep(1)
    dialog_manager.show_mode = ShowMode.SEND
    await message.delete()
    await dialog_manager.next()


# –•—ç–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤–≤–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
async def error_mail_handler(message: Message, widget: ManagedTextInput, dialog_manager: DialogManager, error: ValueError):
    await message.answer(text='–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
    await asyncio.sleep(1)


async def on_photo_sent(message: Message, widget: MessageInput, dialog_manager: DialogManager):
    # –ü–æ–ª—É—á–∞–µ–º ID —Ñ–æ—Ç–æ
    foto_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Ñ–æ—Ç–æ (–Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞)
    state = dialog_manager.middleware_data["state"]
    us_dict = await state.get_data()
    us_name = us_dict['name']
    us_mail = us_dict['mail']
    us_skills = dialog_manager.dialog_data['skills']
    print('us_skills = ', us_skills)  # ['4', '5']
    us_dict['foto_id'] = foto_id
    skill = ''
    for index in us_skills:
        if index in skills_dict:
            skill+=f'- {skills_dict[index]}\n\n'
    us_dict['skills'] = skill
    new_anketa = Anketa(foto_id=foto_id, description=f'‚úÖ  <b>–ê–Ω–∫–µ—Ç–∞ –ó–∞—è–≤–∏—Ç–µ–ª—è</b>\n\n–ò–º—è: <b>{us_name}</b>\n\nemail: <b>{us_mail}</b>\n\n'
                                                     f'–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:   üî•\n\n{skill}\n\nüî∑')
    await state.set_data(us_dict)
    bot_dict = await dp.storage.get_data(key=bot_storage_key)  # –ü–æ–ª—É—á–∞—é —Å–ª–æ–≤–∞—Ä—å –±–æ—Ç–∞
    bot_dict[message.from_user.id] = new_anketa  # –ó–∞–ø–∏—Å—ã–≤–∞—é –±–æ—Ç—É –∞–Ω–∫–µ—Ç—É —é–∑–µ—Ä–∞ –ø–æ —Ç–µ–ª–µ–≥—Ä–∞–º id
    await dp.storage.update_data(key=bot_storage_key, data=bot_dict)  # –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é —Å–ª–æ–≤–∞—Ä—å –±–æ—Ç–∞
    await message.delete()
    await dialog_manager.next()


async def message_not_foto_handler(message: Message, widget: MessageInput,
        dialog_manager: DialogManager) -> None:
    dialog_manager.show_mode = ShowMode.NO_UPDATE
    await message.answer('*** –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –≤–∞—à–µ —Ñ–æ—Ç–æ üë¶')









